# 应用名称
spring.application.name=CodeGenerator
# 应用服务 WEB 访问端口
server.port=8080
#下面这些内容是为了让MyBatis映射
#指定Mybatis的Mapper文件
mybatis.mapper-locations=classpath:mappers/*xml
#指定Mybatis的实体目录
mybatis.type-aliases-package=live.fanxing.codegenerator.mybatis.entity
# 数据库驱动：

# 数据源名称
spring.datasource.name=defaultDataSource


# 数据库ip地址

cr.database.host=localhost
cr.database.port=3306
cr.database.name=rq
cr.database.type=mysql
cr.database.driver=com.mysql.cj.jdbc.Driver
cr.database.username=root
cr.database.password=123456

spring.datasource.driver-class-name=${cr.database.driver}
# 数据库连接地址
#spring.datasource.url=jdbc:${cr.database.type}://${cr.databse.host}:${cr.database.port}/${cr.database.name}?serverTimezone=UTC
spring.datasource.url=jdbc:${cr.database.type}://${cr.database.host}:${cr.database.port}/${cr.database.name}?serverTimezone=UTC
# 数据库用户名&密码：
spring.datasource.username=${cr.database.username}
spring.datasource.password=${cr.database.password}

# THYMELEAF (ThymeleafAutoConfiguration)
# 开启模板缓存（默认值： true ）
spring.thymeleaf.cache=true
# 检查模板是否存在，然后再呈现
spring.thymeleaf.check-template=true
# 检查模板位置是否正确（默认值 :true ）
spring.thymeleaf.check-template-location=true
#Content-Type 的值（默认值： text/html ）
spring.thymeleaf.content-type=text/html
# 开启 MVC Thymeleaf 视图解析（默认值： true ）
spring.thymeleaf.enabled=true
# 模板编码
spring.thymeleaf.encoding=UTF-8
# 要被排除在解析之外的视图名称列表，⽤逗号分隔
spring.thymeleaf.excluded-view-names=
# 要运⽤于模板之上的模板模式。另⻅ StandardTemplate-ModeHandlers( 默认值： HTML5)
spring.thymeleaf.mode=HTML5
# 在构建 URL 时添加到视图名称前的前缀（默认值： classpath:/templates/ ）
spring.thymeleaf.prefix=classpath:/templates/
# 在构建 URL 时添加到视图名称后的后缀（默认值： .html ）
spring.thymeleaf.suffix=.html




# 生成器配置

## 配置模板文件的文件名
cr.model.entity=entity
cr.model.dao=dao
cr.model.mapper=mapper
cr.model.service=service
cr.model.controller=controller

## 配置模板文件的包名
cr.package.entity=entity
cr.package.dao=dao
cr.package.mapper=mapper
cr.package.service=service
cr.package.controller=controller